// <auto-generated />
using System;
using Mendel.Core.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mendel.Core.Persistence.Migrations
{
    [DbContext(typeof(MendelDbContext))]
    partial class MendelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Gene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alleles")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("Trait")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Genes", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.GeneSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneId")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneId");

                    b.HasIndex("SetId");

                    b.ToTable("GeneSets", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.GeneSetImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneSetId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneSetId");

                    b.ToTable("ImageGeneSets", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Sets", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdultUnisex")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CapsuleImage")
                        .HasColumnType("longtext");

                    b.Property<string>("Event")
                        .HasColumnType("longtext");

                    b.Property<bool>("JuvenileUnisex")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Species", (string)null);
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Gene", b =>
                {
                    b.HasOne("Mendel.Core.Persistence.Models.Species", "Species")
                        .WithMany("Genes")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.GeneSet", b =>
                {
                    b.HasOne("Mendel.Core.Persistence.Models.Gene", "Gene")
                        .WithMany("GeneSets")
                        .HasForeignKey("GeneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mendel.Core.Persistence.Models.Set", "Set")
                        .WithMany("GeneSets")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gene");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.GeneSetImage", b =>
                {
                    b.HasOne("Mendel.Core.Persistence.Models.GeneSet", "GeneSet")
                        .WithMany("GeneSetImages")
                        .HasForeignKey("GeneSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mendel.Core.Persistence.Models.Image", "Image")
                        .WithMany("GeneSetImages")
                        .HasForeignKey("GeneSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneSet");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Gene", b =>
                {
                    b.Navigation("GeneSets");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.GeneSet", b =>
                {
                    b.Navigation("GeneSetImages");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Image", b =>
                {
                    b.Navigation("GeneSetImages");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Set", b =>
                {
                    b.Navigation("GeneSets");
                });

            modelBuilder.Entity("Mendel.Core.Persistence.Models.Species", b =>
                {
                    b.Navigation("Genes");
                });
#pragma warning restore 612, 618
        }
    }
}
